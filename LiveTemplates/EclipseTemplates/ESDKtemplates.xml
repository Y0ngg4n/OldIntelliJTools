<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java" deleted="false" description="Eventhandler Annotations" enabled="true" name="evhaa">@EventHandler(head = &lt;&lt;MaskEditor&gt;&gt;${cursor}.class, row = &lt;&lt;MaskEditor&gt;&gt;.Row.class)&#13;
@RunFopWith(EventHandlerRunner.class)&#13;
</template><template autoinsert="true" context="java" deleted="false" description="Eventhandler ButtonEvent AFTER" enabled="true" name="evhabaft">@ButtonEventHandler(field = "&lt;&lt;Field&gt;&gt;", type = ButtonEventType.AFTER, table = false)&#13;
public void startAfter(ButtonEvent event, ScreenControl screenControl, DbContext ctx, &lt;&lt;MaskEditor&gt;&gt; head) throws EventException {&#13;
    ${cursor}&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="Eventhandler ButtonEvent BEFORE" enabled="true" name="evhabbef">@ButtonEventHandler(field = "&lt;&lt;Field&gt;&gt;", type = ButtonEventType.BEFORE, table = false)&#13;
public void startBefore(ButtonEvent event, ScreenControl screenControl, DbContext ctx, &lt;&lt;MaskEditor&gt;&gt; head) throws EventException {&#13;
    ${cursor}&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="Eventhandler FieldEvent EXIT" enabled="true" name="evhafex">@FieldEventHandler(field = "&lt;&lt;FieldName&gt;&gt;", type = FieldEventType.EXIT, table = false)&#13;
public void yisExit(FieldEvent event, ScreenControl screenControl, DbContext dbContext, &lt;&lt;MaskEditor&gt;&gt; head) throws EventException, IOException {&#13;
    ${cursor}&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="Eventhandler FieldEvent FILL" enabled="true" name="evhaffill">@FieldEventHandler(field = "&lt;&lt;FieldName&gt;&gt;", type = FieldEventType.FILL, table = false)&#13;
public void yisFill(FieldEvent event, ScreenControl screenControl, DbContext dbContext, &lt;&lt;MaskEditor&gt;&gt; head) throws EventException, IOException {&#13;
    ${cursor}&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="Eventhandler Imports" enabled="true" name="evhaimp">import de.abas.erp.axi.event.EventException;&#13;
import de.abas.erp.axi.screen.ScreenControl;&#13;
import de.abas.erp.axi2.EventHandlerRunner;&#13;
import de.abas.erp.axi2.annotation.EventHandler;&#13;
import de.abas.erp.axi2.event.ButtonEvent;&#13;
import de.abas.erp.axi2.type.ButtonEventType;&#13;
import de.abas.erp.axi2.annotation.ButtonEventHandler;&#13;
import de.abas.erp.axi2.event.FieldEvent;&#13;
import de.abas.erp.axi2.type.FieldEventType;&#13;
import de.abas.erp.axi2.annotation.FieldEventHandler;&#13;
import de.abas.erp.axi2.event.ScreenEvent;&#13;
import de.abas.erp.axi2.type.ScreenEventType;&#13;
import de.abas.erp.axi2.annotation.ScreenEventHandler;&#13;
import de.abas.erp.jfop.rt.api.annotation.RunFopWith;&#13;
${cursor}</template><template autoinsert="true" context="java" deleted="false" description="Eventhandler ScreenEvent CANCEL" enabled="true" name="evhascan">@ScreenEventHandler(type = ScreenEventType.CANCEL)&#13;
public void screenCancel(ScreenEvent event, ScreenControl screenControl, DbContext dbContext, &lt;&lt;MaskEditor&gt;&gt; head) throws EventException {&#13;
    ${cursor}&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="Eventhandler ScreenEvent END" enabled="true" name="evhasend">@ScreenEventHandler(type = ScreenEventType.END)&#13;
public void screenEND(ScreenEvent event, ScreenControl screenControl, DbContext dbContext, &lt;&lt;MaskEditor&gt;&gt; head) throws EventException {&#13;
   ${cursor}&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="Eventhandler ScreenEvent ENTER" enabled="true" name="evhasent">@ScreenEventHandler(type = ScreenEventType.ENTER)&#13;
public void screenEnter(ScreenEvent event, ScreenControl screenControl, DbContext dbContext, &lt;&lt;MaskEditor&gt;&gt; head) throws EventException {&#13;
    ${cursor}&#13;
}</template><template autoinsert="true" context="java" deleted="false" description="Eventhandler ScreenEvent VALIDATION" enabled="true" name="evhasval">@ScreenEventHandler(type = ScreenEventType.VALIDATION)&#13;
public void screenValidation(ScreenEvent event, ScreenControl screenControl, DbContext dbContext, &lt;&lt;MaskEditor&gt;&gt; head) throws EventException {&#13;
    ${cursor}&#13;
}</template></templates>